/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <Foundation/NSObject.h>
#import "itunesstored-Structs.h"
#import "PipelineDownloadDelegate.h"

@class NSMutableSet, NSMutableDictionary, NSOrderedSet, NSMutableArray;

__attribute__((visibility("hidden")))
@interface DownloadPipeline : NSObject <PipelineDownloadDelegate> {
	dispatch_queue_s* _databaseQueue;
	dispatch_queue_s* _dispatchQueue;
	NSMutableArray* _downloads;
	NSMutableDictionary* _downloadsByIdentifier;
	NSMutableSet* _downloadIdentifiersWithoutPowerAssertion;
	BOOL _hasKeepAliveAssertion;
	BOOL _hasPowerAssertion;
}
@property(readonly, assign) int numberOfDownloads;
@property(readonly, assign) NSOrderedSet* downloadIdentifiers;
@property(readonly, assign) NSOrderedSet* activeDownloadIdentifiers;
+(BOOL)canPerformDownloadWithSize:(long long)size external:(BOOL)external kind:(id)kind;
+(void)_setupOperationQueues;
+(id)softwareInstallQueue;
+(id)otherQueue;
+(id)processingQueue;
+(id)preflightQueue;
+(id)otherInstallQueue;
+(id)mediaAssetFetchQueue;
-(void)_removePipelineDownload:(id)download;
-(void)_reloadDeviceStateAfterDownloadChange:(id)change;
-(void)_reloadDeviceState;
-(void)_performNextSteps;
-(id)_newPipelineDownloadIdentifiersForRebuild:(BOOL)rebuild withExistingDownloads:(id)existingDownloads;
-(void)_moveDownload:(long long)download afterDownload:(long long)download2 beforeDownload:(long long)download3;
-(void)_getDeviceContext:(DeviceContext*)context;
-(void)_fillPipeline:(BOOL)pipeline withCompletionHandler:(id)completionHandler;
-(id)_downloadsQueryForPipelineWithDatabase:(id)database;
-(BOOL)_canStartDownload:(id)download withDeviceContext:(const DeviceContext*)deviceContext;
-(void)_networkTypeChanged:(id)changed;
-(void)_pluggedInChanged:(id)changed;
-(void)_downloadStatusPropertyChanged:(id)changed;
-(void)_downloadHandlerAvailableNotification:(id)notification;
-(void)pipelineDownloadStateChanged:(id)changed;
-(void)waitUntilDownloadIsIdleWithIdentifier:(long long)identifier;
-(id)stopDownloadsWithIdentifiers:(id)identifiers;
-(void)setHandlerIdentifier:(long long)identifier forDownloadIdentifier:(long long)downloadIdentifier;
-(void)removeDownloadsWithIdentifiers:(id)identifiers;
-(BOOL)reevaluateDownloadWithIdentifier:(long long)identifier waitUntilIdle:(BOOL)idle;
-(void)rebuildPipelineWithReason:(int)reason;
-(void)rebuildPipeline;
-(void)moveDownloadWithIdentifier:(long long)identifier beforeDownloadWithIdentifier:(long long)identifier2;
-(void)moveDownloadWithIdentifier:(long long)identifier afterDownloadWithIdentifier:(long long)identifier2;
-(id)finishDownloadsWithIdentifiers:(id)identifiers downloadPhase:(id)phase error:(id)error;
-(void)fillPipelineWithReason:(int)reason;
-(void)fillPipeline;
-(void)checkConstraintsForDownloadWithIdentifier:(long long)identifier;
-(BOOL)canPauseDownloadWithIdentifier:(long long)identifier;
-(id)cancelDownloadsWithIdentifiers:(id)identifiers;
-(BOOL)cancelDownloadWithIdentifier:(long long)identifier waitUntilIdle:(BOOL)idle;
-(void)dealloc;
-(id)init;
@end

